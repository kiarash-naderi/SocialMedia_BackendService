generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  username      String   @unique
  email         String   @unique
  passwordHash  String
  firstname     String?
  lastname      String?
  bio           String?
  avatar        String?
  posts         Post[]
  likes         Like[]
  bookmarks     Bookmark[]
  followers     Follow[] @relation("Follower")
  following     Follow[] @relation("Following")
  mentions      Mention[] 
  postCount     Int      @default(0)
  followerCount Int      @default(0)
  followingCount Int     @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Post {
  id            String   @id @default(uuid())
  caption       String?
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  images        PostImage[]
  likes         Like[]
  bookmarks     Bookmark[]
  mentions      Mention[] 
  likeCount     Int      @default(0)
  bookmarkCount Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model PostImage {
  id            String   @id @default(uuid())
  url           String
  postId        String
  post          Post     @relation(fields: [postId], references: [id])
}

model Like {
  id            String   @id @default(uuid()) 
  userId        String 
  user          User     @relation(fields: [userId], references: [id]) 
  postId        String 
  post          Post     @relation(fields: [postId], references: [id]) 
  createdAt     DateTime @default(now()) 

  @@unique([userId, postId]) 
  @@index([postId]) 
}

model Bookmark {
  id            String   @id @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  postId        String
  post          Post     @relation(fields: [postId], references: [id])
  createdAt     DateTime @default(now())

  @@unique([userId, postId])
  @@index([postId])
}

model Follow {
  id            String   @id @default(uuid())
  followerId    String
  followingId   String
  follower      User     @relation("Follower", fields: [followerId], references: [id])
  following     User     @relation("Following", fields: [followingId], references: [id])
  createdAt     DateTime @default(now())

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Mention {
  id            String   @id @default(uuid())
  postId        String
  post          Post     @relation(fields: [postId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())

  @@unique([postId, userId]) 
  @@index([postId])
  @@index([userId])
}